import logging

log = logging.getLogger(__name__)

async def get_user_contacts(user_id: str) -> dict:
    """
    –§–µ–π–∫–æ–≤—ã–π –ø–æ—Ö–æ–¥ –≤ –±–¥.
    """
    log.info(f"–ó–∞–ø—Ä–∞—à–∏–≤–∞—é –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è user_id: {user_id}")
    # —Ñ–µ–π–∫–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    users_db = {
        "user-uuid-12345": {
            "email": "real.user@example.com",
            "phone": "+1234567890",
            "telegram": "987654321",
            "preferred_channel": "telegram"
        },
        "user-uuid-67890": {
            "email": "manager@company.com",
            "phone": "+199988877",
            "telegram": None, # –£ –Ω–µ–≥–æ –Ω–µ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–∞
            "preferred_channel": "email"
        }
    }
    return users_db.get(user_id, {})

async def get_template(event_name: str, channel: str, payload: dict) -> str:
    """–†–µ–Ω–¥–µ—Ä–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ."""  
    text = f"EVENT: {event_name}, CHANNEL: {channel}"
    
    if event_name == "order.shipped":
        order_id = payload.get("order_id", "N/A")
        if channel == "telegram":
            text = f"üöö *–ó–∞–∫–∞–∑ ‚Ññ{order_id}* –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –£—Ä–∞!"
        elif channel == "email":
            name = payload.get("customer_name", "–ö–ª–∏–µ–Ω—Ç")
            text = f"<html><body>–£–≤–∞–∂–∞–µ–º—ã–π {name}, –í–∞—à –∑–∞–∫–∞–∑ {order_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.</body></html>"
        elif channel == "sms":
            text = f"ZAKAZ {order_id} otpravlen."
            
    return text